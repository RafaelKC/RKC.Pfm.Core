// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RKC.Pfm.Core.Infrastructure.Database;

#nullable disable

namespace RKC.Pfm.Core.Infrastructure.Migrations
{
    [DbContext(typeof(RkcPfmCoreDbContext))]
    partial class RkcPfmCoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RKC.Pfm.Core.Domain.Periods.Period", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("IdSchemaPeriod")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsSchema")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("End")
                        .IsUnique();

                    b.HasIndex("IdSchemaPeriod");

                    b.HasIndex("Start")
                        .IsUnique();

                    b.ToTable("Periods", "public");
                });

            modelBuilder.Entity("RKC.Pfm.Core.Domain.Periods.Period", b =>
                {
                    b.HasOne("RKC.Pfm.Core.Domain.Periods.Period", "SchemaPeriod")
                        .WithMany("BasedPeriods")
                        .HasForeignKey("IdSchemaPeriod");

                    b.Navigation("SchemaPeriod");
                });

            modelBuilder.Entity("RKC.Pfm.Core.Domain.Periods.Period", b =>
                {
                    b.Navigation("BasedPeriods");
                });
#pragma warning restore 612, 618
        }
    }
}
